

#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОписанияПередаваемыхФайлов = ПолучитьОписанияФайлов();
	ОбработатьФайлыСпискаБазНаСервере(ОписанияПередаваемыхФайлов);

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьФайлыСпискаБазНаСервере(ОписанияПереданныхФайлов)
	
	НаборОписанийБаз = Новый Массив;
	Для Каждого ФайлСпискаБаз Из ОписанияПереданныхФайлов Цикл
		ПрочитатьФайлВСтруктуру(ФайлСпискаБаз, НаборОписанийБаз);	
	КонецЦикла;

	ЗаполнитьДереваСпискомБаз(НаборОписанийБаз);

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДереваСпискомБаз(НаборОписанийБаз)
	//TODO
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьФайлВСтруктуру(ФайлСпискаБаз, НаборОписанийБаз)
	
	ТекстОписанияБазы = Новый ТекстовыйДокумент();
	
	ТекстОписанияБазы.Прочитать(ФайлСпискаБаз);
	КоличествоСтрок = ТекстОписанияБазы.КоличествоСтрок();
	
	СтруктураПараметровБазы = Неопределено;
	
	Для СчетчикСтрок = 1 По КоличествоСтрок Цикл
		
		СтрокаПараметра = ТекстОписанияБазы.ПолучитьСтроку(СчетчикСтрок);
		
		Если СтрНачинаетсяС(СтрокаПараметра, "[") И СтрЗаканчиваетсяНа(СтрокаПараметра, "]") Тогда
			
			ДлинаСтроки = СтрДлина(СтрокаПараметра);
			СтрокаПараметра = Сред(СтрокаПараметра, 2, ДлинаСтроки - 2);
			
			Если ЗначениеЗаполнено(СтруктураПараметровБазы) Тогда
				НаборОписанийБаз.Добавить(СтруктураПараметровБазы);
			КонецЕсли;
			
			СтруктураПараметровБазы = Новый Структура;
			СтруктураПараметровБазы.Вставить("Name", СтрокаПараметра);
			
		ИначеЕсли ЗначениеЗаполнено(СтруктураПараметровБазы) Тогда
			
			ПозицияРазделителя = СтрНайти(СтрокаПараметра, "=");
			
			КлючПараметра = Лев(СтрокаПараметра, ПозицияРазделителя - 1);
			ЗначениеПараметра = Сред(СтрокаПараметра, ПозицияРазделителя + 1);
			
			СтруктураПараметровБазы.Вставить(КлючПараметра, ЗначениеПараметра);
		
		КонецЕсли;
		
	КонецЦикла;
	
	НаборОписанийБаз.Добавить(СтруктураПараметровБазы);

КонецПроцедуры

&НаКлиенте
Функция ПолучитьОписанияФайлов()
	
	МассивОписанийФайлов = Новый Массив;
	ВременныйКаталог = КаталогВременныхФайлов();	
	
	Если ОбщегоНазначенияКлиент.ЭтоWindowsКлиент() Тогда
		
		ВременныйКаталог = СтрЗаменить(ВременныйКаталог, "\Local\Temp\", "\Roaming\1C\1CEStart\");
	
	ИначеЕсли ОбщегоНазначенияКлиент.ЭтоLinuxКлиент()
				Или  ОбщегоНазначенияКлиент.ЭтоMacOSКлиент() Тогда
		
		ВременныйКаталог = "~/.1C/1cestart";
	КонецЕсли;
	
	ПутиКФайламБаз = НайтиФайлы(ВременныйКаталог, "*.v8i"); 
	
	Для Каждого ФайлБаз Из ПутиКФайламБаз Цикл
		МассивОписанийФайлов.Добавить(ФайлБаз.ПолноеИмя);		
	КонецЦикла;
	
	Файлы_1cestart = НайтиФайлы(ВременныйКаталог, "1cestart.cfg"); 
	
	Если Не ЗначениеЗаполнено(Файлы_1cestart) Тогда
		Возврат МассивОписанийФайлов;
	КонецЕсли;
	
	ЧтениеТекста = Новый ЧтениеТекста(Файлы_1cestart[0].ПолноеИмя, 
											КодировкаТекста.UTF8, 
											Символы.ПС, 
											Символы.ВК + Символы.ПС);
	
	СтрокаТекста = ЧтениеТекста.ПрочитатьСтроку();
	Пока СтрокаТекста <> Неопределено Цикл
		Если СтрНайти(СтрокаТекста, "CommonInfoBases=") Тогда
			СтрокаТекста = СтрЗаменить(СтрокаТекста, "CommonInfoBases=", "");
			МассивОписанийФайлов.Добавить(СтрокаТекста);
		КонецЕсли;
		
		СтрокаТекста = ЧтениеТекста.ПрочитатьСтроку();
	КонецЦикла;
	
	Возврат МассивОписанийФайлов;

КонецФункции
#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиКомандФормы

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции



&НаСервере
Процедура ПрочитатьСоставБазИзФайла(Параметры)
	
КонецПроцедуры


#КонецОбласти
